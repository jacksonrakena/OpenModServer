@page "{id:guid?}"
@inject GameManager GameManager
@using Humanizer
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using OpenModServer.Data.Identity
@using OpenModServer.Data.Releases.Approvals
@using OpenModServer.Games
@using OpenModServer.Games.Capabilities
@using Westwind.AspNetCore.Markdown
@model OpenModServer.Areas.Mods.Pages.ViewAllModsModel
@inject SignInManager<OmsUser> SignInManager
@inject UserManager<OmsUser> UserManager


<style>
    .card:hover {
        background-color: #f5f5f5;
    }
</style>
<link rel="stylesheet" href="~/@(nameof(Index)).styles.css" />
@if (Model.Listing == null)
{
    ViewData["Title"] = "Mods";
    
    <h1>@ViewData["Title"]</h1>

    foreach (var group in Model.ModListings)
    {
        <div class="mb-4">
            <h3>@(GameManager.Resolve(group.Key)?.Name ?? group.Key)</h3>
            <div class="mt-1 row row-cols-1 row-cols-md-3 g-4">
                @foreach (var listing in group)
                {
                    <div class="col">
                            <div class="card h-100">
                                <img height="100px" src="https://d.lu.je/avatar/255950165200994307" class="card-img-top" alt="...">
                                <a asp-area="Mods" asp-page="/Index" asp-route-id="@listing.Id" style="text-decoration: none; color: unset" class="card-body stretched-link">
                                    <h5 class="card-title">@listing.Name</h5>
                                    <p class="card-text">@listing.Tagline</p>
                                    <div>
                                        @foreach (var tag in listing.Tags)
                                        {
                                            <span class="badge bg-primary">@tag</span>
                                        }
                                    </div>
                                </a>
                            </div>
                        </div>
                }         
            </div>
        </div>
    }   
}
else
{
    var isPublishable = GameManager.Resolve(Model.Listing.GameIdentifier) is IPublishable publisher;
    ViewData["Title"] = Model.Listing.Name;
    var game = GameManager.Resolve(Model.Listing!.GameIdentifier);
    var isOwner = SignInManager.IsSignedIn(User) && SignInManager.UserManager.GetUserId(User) == Model.Listing?.CreatorId.ToString();
    var isOwnerOrAdmin = isOwner;
    
    
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Mods" asp-page="/Index" asp-route-id="">Home</a></li>
            <li class="breadcrumb-item"><a href="#">@game.Name</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Listing.Name</li>
        </ol>
    </nav>
    
    <h2>@Model.Listing?.Name</h2>
                            
    <div>
        Tags:
        @foreach (var tag in Model.Listing.Tags)
        {
            <a asp-area="Mods" asp-page="/Tags/ViewTag" asp-route-id="@tag" class="badge bg-primary">@tag</a>
        }
    </div>

    var latestProductionApprovedRelease = Model.Listing?.Releases
        .OrderByDescending(d => d.CreatedAt)
        .FirstOrDefault(d => d.CurrentStatus == ModReleaseApprovalStatus.Approved);
    if (latestProductionApprovedRelease != null)
    {
        <div style="margin-top: 20px; margin-bottom: 30px;">
            <a class="btn btn-lg btn-success" asp-area="Downloads" asp-controller="Download" asp-action="DownloadReleaseById" asp-route-id="@latestProductionApprovedRelease.Id">
                Download latest version <span style="font-size: small">@latestProductionApprovedRelease.Name</span>
            </a>
        </div>
    }
    
    <div style="margin-top: 20px;" class="container">
        <div class="row">
            <div class="mb-3 col-sm-4">
                <div class="mb-3 border rounded p-2 d-flex flex-row">
                    <img class="rounded" src="@($"https://www.gravatar.com/avatar/{Model.Listing.Creator.GenerateMd5EmailHash()}")" width="50px" height="50px" />
                    <div class="d-flex flex-column ms-2">
                        <a asp-area="Users" asp-page="/User" asp-route-id="@Model.Listing?.CreatorId">@Model.Listing?.Creator.UserName</a>
                        <div>@Model.ModsMadeByAuthor mods</div>
                    </div>
                </div>
                <div>
                    <h3>Releases</h3>
                    <div>
                        @foreach (var release in Model.Listing?.Releases.OrderByDescending(d => d.CreatedAt))
                        {
                            <div class="rounded border mb-2 p-2">
                                <div class="d-flex flex-row justify-content-between">
                                    <div>
                                        <div><span style="font-size: large; font-weight: bold;">@release.Name</span> (@release.ReleaseType)</div>
                                        <div style="font-size:small">@release.DownloadCount downloads, @release.FileSizeKilobytes KB</div>
                                        <div style="font-size:small">@release.CreatedAt.Humanize(null, DateTime.Now)</div>
                                    </div>
                                    <div>
                                        @if (release.CurrentStatus == ModReleaseApprovalStatus.Approved)
                                        {
                                            <div><a asp-area="Downloads" asp-controller="Download" asp-action="DownloadReleaseById" asp-route-id="@release.Id">Download</a></div>
                                        }
                                        else
                                        {
                                            <span>Awaiting approval</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        @if (isOwner)
                        {
                            <a style="text-decoration: none; color: unset;" class="card"  asp-route-mod_id="@Model.Listing?.Id.ToString()" asp-area="Mods" asp-page="/Releases/CreateRelease">
                                <div class="card-body text-center">
                                    Create new release
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-8">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" href="#" data-bs-toggle="tab" data-bs-target="#description">Description</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" data-bs-toggle="tab" data-bs-target="#comments">Comments (@Model.Listing.Comments.Count)</a>
                    </li>
                    @if (isPublishable)
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-bs-toggle="tab" data-bs-target="#installation">Installation guide</a>
                        </li>
                    }
                </ul>
                <div class="tab-content mt-3" id="tab-content">
                    <div class="tab-pane fade show active" id="description">
                        @(new HtmlString(new MarkdownParserMarkdig().Parse(@Model.Listing?.Description)))
                    </div>
                    <div class="tab-pane fade " id="comments">

                        @if (Model.Listing.Comments.FirstOrDefault(d => d.Id == Model.Listing.PinnedCommentId) is {} pinnedComment)
                        {
                            <div class="d-flex flex-row border border-success rounded p-2 mb-3">
                                <img class="rounded" src="@($"https://www.gravatar.com/avatar/{pinnedComment.Author.GenerateMd5EmailHash()}")" height="50px" width="50px" alt="@pinnedComment.Author.UserName"/>
                                <div class="ms-2 w-100">
                                    <div class="d-flex flex-row justify-content-between">
                                        <div>
                                            <a class="comment-author-title" asp-route-id="@pinnedComment.AuthorId.ToString()" asp-area="Users" asp-page="/User">
                                                @pinnedComment.Author.UserName
                                            </a>
                                            <span class="ms-2 badge bg-success">Pinned</span>
                                            @if (pinnedComment.AuthorId == Model.Listing.CreatorId)
                                            {
                                                <span class="ms-2 badge bg-info">Author</span>
                                            }
                                        </div>
                                        <div class="text-muted">
                                            @pinnedComment.CreatedAt.Humanize()
                                        </div>
                                    </div>
                                    <div>@(new HtmlString(new MarkdownParserMarkdig().Parse(pinnedComment.Content)))</div>
                                </div>
                            </div>
                        }
                        @foreach (var comment in Model.Listing.Comments.Where(d => d.Id != Model.Listing.PinnedCommentId))
                        {
                            <div class="d-flex flex-row border rounded p-2 mb-2">
                                <img class="rounded" src="@($"https://www.gravatar.com/avatar/{comment.Author.GenerateMd5EmailHash()}")" height="50px" width="50px" alt="@comment.Author.UserName"/>
                                <div class="ms-2 w-100">
                                    <div class="d-flex flex-row justify-content-between">
                                        <div>
                                            <a class="comment-author-title" asp-route-id="@comment.AuthorId.ToString()" asp-area="Users" asp-page="/User">
                                                @comment.Author.UserName
                                            </a>
                                            @if (comment.AuthorId == Model.Listing.CreatorId)
                                            {
                                                <span class="ms-2 badge bg-info">Author</span>
                                            }
                                        </div>
                                        <div class="text-muted">
                                            @comment.CreatedAt.Humanize()
                                        </div>
                                    </div>
                                    <div>@(new HtmlString(new MarkdownParserMarkdig().Parse(comment.Content)))</div>
                                </div>
                            </div>
                        }
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var user = await UserManager.GetUserAsync(User);
                            if (user != null)
                            {
                                <div class="d-flex flex-row w-100">
                                    <img class="rounded" src="@($"https://www.gravatar.com/avatar/{user.GenerateMd5EmailHash()}")" height="50px" width="50px" alt="@user.UserName"/>
                                    <div class="ms-2">
                                        <form method="post">
                                            <input type="hidden" name="modId" value="@Model.Listing.Id" />
                                            <textarea name="comment" class="form-control mb-2" placeholder="Post a new comment..."></textarea>
                                            <button asp-page-handler="CreateComment" type="submit" class="btn btn-success">Post</button>
                                        </form>
                                    </div>
                                </div> 
                            }
                        }
                    </div>
                    @if (isPublishable)
                    {
                        var url = GameManager.GeneratePublisherUrl(game, Model.HttpContext);
                        
                        <div class="tab-pane fade " id="installation">
                            <div>
                                Add the following URL to your plugin sources:
                                <br/>
                                <code>
                                    @url
                                </code>
                                <button type="button" class="btn btn-secondary" onclick="navigator.clipboard.writeText('@url')">Copy</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}